{"version":3,"sources":["features/userSlice.js","HeaderOptions.js","firebase.js","Header.js","Sidebar.js","InputOptions.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOptions","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoURL","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","alt","type","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItems","topic","displayName","InputOptions","color","style","Post","forwardRef","ref","description","message","photoUrl","console","log","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","posts","setPosts","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4986964.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user= action.payload;\r\n    },\r\n   logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login,logout } = userSlice.actions;\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from 'react'\r\nimport './HeaderOptions.css'\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\n\r\nfunction HeaderOptions({ avatar,Icon,title, onClick }) {\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <div onClick={onClick} className=\"headerOptions\">\r\n           {Icon && <Icon className=\"headerOptions__icons\"/>}\r\n            {avatar && (\r\n                <Avatar  className=\"headerOptions__icons\" src={user?.photoURL}> \r\n                    {user?.email[0]}\r\n                </Avatar> \r\n            )}\r\n           <h3 className=\"headerOptions__title\">{title}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderOptions\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCPSg9jI1VzrI2HDS9HGD2Q30y99dYFhNo\",\r\n    authDomain: \"linkedln-clone-38c41.firebaseapp.com\",\r\n    projectId: \"linkedln-clone-38c41\",\r\n    storageBucket: \"linkedln-clone-38c41.appspot.com\",\r\n    messagingSenderId: \"866907310668\",\r\n    appId: \"1:866907310668:web:f9f1aa33d1eac2226142e9\"\r\n  };\r\n\r\n\r\n  const firebaseApp= firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  const db= firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export {db,auth} ;\r\n  ","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOptions from './HeaderOptions';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logout } from \"./features/userSlice\";\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n    \r\n    const dispatch = useDispatch();\r\n     \r\n    const logoutOfApp = () => {\r\n        dispatch(logout())\r\n        auth.signOut();\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n           \r\n        <div className=\"header_left\">\r\n           <img src=\"./images/linkedln.png\" alt=\"\"/>\r\n           <div className=\"header_search\">\r\n             <SearchIcon />\r\n\r\n             <input type=\"text\"  placeholder=\"Search\"/>\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"header_right\">\r\n            <HeaderOptions Icon={HomeIcon}  title=\"Home\"/>\r\n            <HeaderOptions Icon={SupervisorAccountIcon}  title=\"My Network\"/>\r\n            <HeaderOptions Icon={BusinessCenterIcon} title=\"Jobs\" />\r\n            <HeaderOptions Icon={ChatIcon} title=\"Messaging\" />\r\n            <HeaderOptions Icon={NotificationsIcon} title=\"Notification\" />\r\n            <HeaderOptions  avatar={true}\r\n                            title=\"me\"\r\n                            onClick={logoutOfApp}\r\n                            />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './Sidebar.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nfunction Sidebar() {\r\n    const user =useSelector(selectUser);\r\n\r\n\r\n    const recentItems = (topic) => (\r\n        <div className=\"sidebar__recentItems\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p> {topic} </p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                    <img src=\"./images/image1.jpg\" alt=\"\" />\r\n                    <Avatar src={user.photoURL}  className=\"siebar__avatar\">{user.email[0]}</Avatar>\r\n                    <h2>{user.displayName}</h2>\r\n                    <h4>{user.email}</h4>\r\n            </div>  \r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viewed you</p>\r\n                    <p className=\"sidebar__statNumber\">250</p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views on post</p>\r\n                    <p className=\"sidebar__statNumber\">250</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p>\r\n                {recentItems('reactjs')}\r\n                {recentItems('programing')}\r\n                {recentItems('Softwareengineering')}\r\n                {recentItems('design')}\r\n            </div>\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport \"./InputOptions.css\";\r\nfunction InputOptions({Icon ,title, color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon  style ={{color : color}} />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOptions\r\n","import React ,{forwardRef} from 'react'\r\nimport \"./Post.css\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport InputOptions from './InputOptions';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\n\r\nconst Post = forwardRef(({name, description, message, photoUrl},ref) => {\r\n    console.log(photoUrl);\r\n    return (\r\n        <div ref={ref} className=\"post\"> \r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}/>\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p> {description}</p>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"post__body\"> \r\n                <h4>{message}</h4> \r\n            </div>\r\n            <div className=\"post__buttons\">\r\n                <InputOptions Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\r\n                <InputOptions Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\r\n                <InputOptions Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\r\n                <InputOptions Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post\r\n","import React,{useState,useEffect} from 'react';\r\nimport \"./Feed.css\";\r\nimport InputOptions from \"./InputOptions.js\";\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Post from \"./Post.js\"\r\nimport {db} from \"./firebase.js\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n    const user= useSelector(selectUser);\r\n    const [posts,setPosts] = useState([]);\r\n    const [input,setInput] = useState('');\r\n    useEffect(() => {\r\n       db.collection(\"posts\").orderBy(\"timestamp\",\"desc\").onSnapshot((snapshot) => \r\n         setPosts(snapshot.docs.map((doc) => (\r\n             {\r\n                 id : doc.id,\r\n                 data: doc.data(),\r\n             }\r\n         ))  \r\n       ));\r\n    }, []);\r\n    \r\n    const sendPost = (e) => {\r\n        e.preventDefault();\r\n       db.collection('posts').add({\r\n           name: user.displayName,\r\n           description:user.email,\r\n           message: input,\r\n           photoUrl:user.photoURL || \" \",\r\n           timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n       });\r\n       setInput(\"\");\r\n    };\r\n   \r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon />\r\n                    <form>\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n               \r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOptions Icon={ImageIcon}  title =\"Photo\" color =\"#7085f9\"/>\r\n                    <InputOptions Icon={SubscriptionsIcon}  title =\"Video\" color =\"#E7A33E\"/>\r\n                    <InputOptions Icon={EventNoteIcon}  title =\"Events\" color =\"#C0CBCD\"/>\r\n                    <InputOptions Icon={CalendarViewDayIcon}  title =\"Write Article\" color =\"#7FC15E\"/>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/*posts */}\r\n            <FlipMove>\r\n            {posts.map(({id, data: {name,description,message,photoUrl }}) => (\r\n                <Post key={id} \r\n                    name ={name}\r\n                    description ={description}\r\n                    message={message}\r\n                    photoUrl={photoUrl}\r\n                    />\r\n            ))}\r\n            </FlipMove>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React, { useState } from 'react'\r\nimport \"./Login.css\";\r\nimport {auth } from \"./firebase\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login } from \"./features/userSlice\";\r\n\r\nfunction Login() {\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name , setName] = useState(\"\");\r\n    const [profilePic , setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const register = () =>{\r\n        if(!name){\r\n            return alert(\"Please enter a full name\");\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        .then((userAuth) => {\r\n            userAuth.user.updateProfile({\r\n                displayName :name,\r\n                photoURL: profilePic \r\n            })\r\n            .then(()=>{\r\n                dispatch(login({\r\n                    email: userAuth.user.email,   // xxxxxxxxxxx\r\n                    uid: userAuth.user.uid,       //xxxxxxxxxxxxx\r\n                    displayName: name,\r\n                    photoURL:profilePic\r\n                }));\r\n            });\r\n        })\r\n        .catch((error)=> alert(error));\r\n        };\r\n    \r\n    \r\n    \r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email,password)\r\n        .then(userAuth => {\r\n            dispatch(login ({\r\n                email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: userAuth.user.displayName,\r\n                    photoURL:userAuth.user.photoURL\r\n            }))\r\n        })\r\n        .catch((error) => alert(error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"./images/linkedln1.png \" alt=\"Login\" />\r\n\r\n            <form>\r\n                <input value={name} onChange={e => setName(e.target.value)}  placeholder=\"Full Name\" type =\"text\" />\r\n                <input value={profilePic} onChange={e => setProfilePic(e.target.value)}type=\"text\" placeholder =\"Profile Pic URL\" />\r\n                <input value={email} onChange={e => setEmail(e.target.value)}  type=\"email\" placeholder=\"Email\" />\r\n                <input value={password} onChange={e => setPassword(e.target.value)}  type=\"password\" placeholder=\"Password\" />\r\n                <button type=\"submit\" onClick={loginToApp}> Sign In </button>\r\n            </form>\r\n            <p>Not a Member ? <span className=\"login__register\" onClick={register}>Register Now</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport \"./Widgets.css\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle = (heading, subtitle) => (\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n                <FiberManualRecordIcon/>\r\n            </div>\r\n            <div className=\"widgets__articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>Linkedln News</h2>\r\n                <InfoIcon/> \r\n            </div>\r\n            {newsArticle(\"CoronaVirus : India, Cases surges again!! \")}\r\n            {newsArticle(\"CoronaVirus : India, Cases surges again!! \")}\r\n            {newsArticle(\"CoronaVirus : India, Cases surges again!! \")}\r\n            {newsArticle(\"CoronaVirus : India, Cases surges again!! \")}\r\n            {newsArticle(\"CoronaVirus : India, Cases surges again!! \")}\r\n     \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React,{useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from './Header.js';\r\nimport Sidebar from './Sidebar.js';\r\nimport Feed from './Feed.js';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser, logout } from './features/userSlice';\r\nimport Login from \"./Login.js\";\r\nimport { auth } from './firebase';\r\n\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login } from \"./features/userSlice\";\r\nimport Widgets from \"./Widgets.js\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  useEffect(()=> {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if(userAuth){\r\n        //user logged in \r\n        dispatch(login({\r\n                   email: userAuth.email,\r\n                    uid: userAuth.uid,\r\n                    displayName: userAuth.displayName,\r\n                    photoURL:userAuth.photoURL\r\n        }));\r\n      }\r\n      else{\r\n        // user logged out\r\n        dispatch(logout());\r\n      }\r\n    })\r\n  },[])\r\n  return (\r\n    <div className=\"app\">\r\n     \r\n      <Header />\r\n      {/*app body */}\r\n\r\n        {!user ? ( <Login /> ) : (\r\n\r\n      <div className=\"app__body\">\r\n      \r\n        <Sidebar/>\r\n\r\n\r\n        <Feed />\r\n        <Widgets />\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}